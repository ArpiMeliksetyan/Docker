{"version":3,"sources":["components/UI/Card.js","components/goals/GoalInput.js","components/goals/GoalItem.js","components/goals/CourseGoals.js","components/UI/ErrorAlert.js","App.js","index.js"],"names":["Card","props","className","children","GoalInput","useState","enteredGoalText","setEnteredGoalText","id","onSubmit","event","preventDefault","trim","length","onAddGoal","alert","htmlFor","type","value","onChange","target","GoalItem","onClick","onDelete","bind","text","CourseGoals","hasNoGoals","goals","map","goal","key","onDeleteGoal","ErrorAlert","errorText","App","loadedGoals","setLoadedGoals","isLoading","setIsLoading","error","setError","goalText","a","fetch","method","body","JSON","stringify","headers","response","json","resData","ok","Error","message","prevGoals","goalId","filter","useEffect","fetchData","ReactDOM","render","document","getElementById"],"mappings":"iWAQeA,MAJf,SAAcC,GACV,OAAO,yBAAKC,UAAU,QAAQD,EAAME,WCsCzBC,MAtCf,SAAmBH,GACf,MAA8CI,mBAAS,IAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KAmBA,OACI,6BAASC,GAAG,cACR,kBAAC,EAAD,KACI,0BAAMC,SAhBlB,SAA2BC,GACvBA,EAAMC,iBAEgC,IAAlCL,EAAgBM,OAAOC,QAK3BZ,EAAMa,UAAUR,GAEhBC,EAAmB,KANfQ,MAAM,+CAaE,2BAAOC,QAAQ,QAAf,YACA,2BACIC,KAAK,OACLT,GAAG,OACHU,MAAOZ,EACPa,SA1BpB,SAA+BT,GAC3BH,EAAmBG,EAAMU,OAAOF,UA2BpB,gD,YC5BLG,MAJf,SAAkBpB,GACd,OAAO,wBAAIC,UAAU,YAAYoB,QAASrB,EAAMsB,SAASC,KAAK,KAAMvB,EAAMO,KAAMP,EAAMwB,OCuB3EC,MAtBf,SAAqBzB,GACjB,IAAM0B,GAAc1B,EAAM2B,OAAgC,IAAvB3B,EAAM2B,MAAMf,OAE/C,OACI,6BAASL,GAAG,gBACR,kBAAC,EAAD,KACKmB,GAAc,kEACf,4BACK1B,EAAM2B,MAAMC,KAAI,SAACC,GAAD,OACb,kBAAC,EAAD,CACIC,IAAKD,EAAKtB,GACVA,GAAIsB,EAAKtB,GACTiB,KAAMK,EAAKL,KACXF,SAAUtB,EAAM+B,sB,MCN7BC,MATf,SAAoBhC,GAChB,OACI,6BAASC,UAAU,eACf,qDACA,2BAAID,EAAMiC,aC0GPC,MA5Gf,WACI,MAAsC9B,mBAAS,IAA/C,mBAAO+B,EAAP,KAAoBC,EAApB,KACA,EAAkChC,oBAAS,GAA3C,mBAAOiC,EAAP,KAAkBC,EAAlB,KACA,EAA0BlC,mBAAS,MAAnC,mBAAOmC,EAAP,KAAcC,EAAd,KAHW,4CA+BX,WAA8BC,GAA9B,iBAAAC,EAAA,6DACIJ,GAAa,GADjB,kBAI+BK,MAAM,yBAA0B,CACnDC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACjBvB,KAAMiB,IAEVO,QAAS,CACL,eAAgB,sBAVhC,cAIcC,EAJd,gBAc8BA,EAASC,OAdvC,UAccC,EAdd,OAgBaF,EAASG,GAhBtB,uBAiBkB,IAAIC,MAAMF,EAAQG,SAAW,2BAjB/C,QAoBQlB,GAAe,SAACmB,GAQZ,MAPkB,CACd,CACIhD,GAAI4C,EAAQtB,KAAKtB,GACjBiB,KAAMiB,IAHI,mBAKXc,OA1BnB,kDA+BQf,EACI,KAAIc,SACJ,8DAjCZ,QAoCIhB,GAAa,GApCjB,2DA/BW,kEAsEX,WAAiCkB,GAAjC,iBAAAd,EAAA,6DACIJ,GAAa,GADjB,kBAI+BK,MAAM,0BAA4Ba,EAAQ,CAC7DZ,OAAQ,WALpB,cAIcK,EAJd,gBAQ8BA,EAASC,OARvC,UAQcC,EARd,OAUaF,EAASG,GAVtB,uBAWkB,IAAIC,MAAMF,EAAQG,SAAW,6BAX/C,QAcQlB,GAAe,SAACmB,GAEZ,OADqBA,EAAUE,QAAO,SAAC5B,GAAD,OAAUA,EAAKtB,KAAOiD,QAfxE,kDAmBQhB,EACI,KAAIc,SACJ,kEArBZ,QAwBIhB,GAAa,GAxBjB,2DAtEW,sBAiGX,OA5FAoB,qBAAU,WAAY,4CAClB,8BAAAhB,EAAA,6DACIJ,GAAa,GADjB,kBAI+BK,MAAM,0BAJrC,cAIcM,EAJd,gBAM8BA,EAASC,OANvC,UAMcC,EANd,OAQaF,EAASG,GARtB,uBASkB,IAAIC,MAAMF,EAAQG,SAAW,8BAT/C,QAYQlB,EAAee,EAAQxB,OAZ/B,kDAcQa,EACI,KAAIc,SACJ,+DAhBZ,QAmBIhB,GAAa,GAnBjB,2DADkB,uBAAC,WAAD,wBAuBlBqB,KACD,IAqEC,6BACKpB,GAAS,kBAAC,EAAD,CAAYN,UAAWM,IACjC,kBAAC,EAAD,CAAW1B,UApGR,+CAqGDwB,GACE,kBAAC,EAAD,CAAaV,MAAOQ,EAAaJ,aAtGlC,gDCAf6B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.5700a624.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nfunction Card(props) {\r\n    return <div className='card'>{props.children}</div>;\r\n}\r\n\r\nexport default Card;\r\n","import React, { useState } from 'react';\r\n\r\nimport './GoalInput.css';\r\nimport Card from '../UI/Card';\r\n\r\nfunction GoalInput(props) {\r\n    const [enteredGoalText, setEnteredGoalText] = useState('');\r\n\r\n    function updateGoalTextHandler(event) {\r\n        setEnteredGoalText(event.target.value);\r\n    }\r\n\r\n    function goalSubmitHandler(event) {\r\n        event.preventDefault();\r\n\r\n        if (enteredGoalText.trim().length === 0) {\r\n            alert('Invalid text - please enter a longer one!');\r\n            return;\r\n        }\r\n\r\n        props.onAddGoal(enteredGoalText);\r\n\r\n        setEnteredGoalText('');\r\n    }\r\n\r\n    return (\r\n        <section id='goal-input'>\r\n            <Card>\r\n                <form onSubmit={goalSubmitHandler}>\r\n                    <label htmlFor='text'>New Goal</label>\r\n                    <input\r\n                        type='text'\r\n                        id='text'\r\n                        value={enteredGoalText}\r\n                        onChange={updateGoalTextHandler}\r\n                    />\r\n                    <button>Add Goal</button>\r\n                </form>\r\n            </Card>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default GoalInput;\r\n","import React from 'react';\r\n\r\nimport './GoalItem.css';\r\n\r\nfunction GoalItem(props) {\r\n    return <li className=\"goal-item\" onClick={props.onDelete.bind(null, props.id)}>{props.text}</li>;\r\n}\r\n\r\nexport default GoalItem;\r\n","import React from 'react';\r\n\r\nimport './CourseGoals.css';\r\nimport Card from '../UI/Card';\r\nimport GoalItem from './GoalItem';\r\n\r\nfunction CourseGoals(props) {\r\n    const hasNoGoals = !props.goals || props.goals.length === 0;\r\n\r\n    return (\r\n        <section id=\"course-goals\">\r\n            <Card>\r\n                {hasNoGoals && <h2>No goals found. Start adding some!</h2>}\r\n                <ul>\r\n                    {props.goals.map((goal) => (\r\n                        <GoalItem\r\n                            key={goal.id}\r\n                            id={goal.id}\r\n                            text={goal.text}\r\n                            onDelete={props.onDeleteGoal}\r\n                        />\r\n                    ))}\r\n                </ul>\r\n            </Card>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default CourseGoals;\r\n","import React from 'react';\r\n\r\nimport './ErrorAlert.css';\r\n\r\nfunction ErrorAlert(props) {\r\n    return (\r\n        <section className='error-alert'>\r\n            <h2>Something went wrong!</h2>\r\n            <p>{props.errorText}</p>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default ErrorAlert;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport GoalInput from './components/goals/GoalInput';\r\nimport CourseGoals from './components/goals/CourseGoals';\r\nimport ErrorAlert from './components/UI/ErrorAlert';\r\n\r\nfunction App() {\r\n    const [loadedGoals, setLoadedGoals] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(function () {\r\n        async function fetchData() {\r\n            setIsLoading(true);\r\n\r\n            try {\r\n                const response = await fetch('http://localhost/goals');\r\n\r\n                const resData = await response.json();\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(resData.message || 'Fetching the goals failed.');\r\n                }\r\n\r\n                setLoadedGoals(resData.goals);\r\n            } catch (err) {\r\n                setError(\r\n                    err.message ||\r\n                    'Fetching goals failed - the server responsed with an error.'\r\n                );\r\n            }\r\n            setIsLoading(false);\r\n        }\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    async function addGoalHandler(goalText) {\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            const response = await fetch('http://localhost/goals', {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    text: goalText,\r\n                }),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n\r\n            const resData = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(resData.message || 'Adding the goal failed.');\r\n            }\r\n\r\n            setLoadedGoals((prevGoals) => {\r\n                const updatedGoals = [\r\n                    {\r\n                        id: resData.goal.id,\r\n                        text: goalText,\r\n                    },\r\n                    ...prevGoals,\r\n                ];\r\n                return updatedGoals;\r\n            });\r\n        } catch (err) {\r\n            setError(\r\n                err.message ||\r\n                'Adding a goal failed - the server responsed with an error.'\r\n            );\r\n        }\r\n        setIsLoading(false);\r\n    }\r\n\r\n    async function deleteGoalHandler(goalId) {\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            const response = await fetch('http://localhost/goals/' + goalId, {\r\n                method: 'DELETE',\r\n            });\r\n\r\n            const resData = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(resData.message || 'Deleting the goal failed.');\r\n            }\r\n\r\n            setLoadedGoals((prevGoals) => {\r\n                const updatedGoals = prevGoals.filter((goal) => goal.id !== goalId);\r\n                return updatedGoals;\r\n            });\r\n        } catch (err) {\r\n            setError(\r\n                err.message ||\r\n                'Deleting the goal failed - the server responsed with an error.'\r\n            );\r\n        }\r\n        setIsLoading(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {error && <ErrorAlert errorText={error} />}\r\n            <GoalInput onAddGoal={addGoalHandler} />\r\n            {!isLoading && (\r\n                <CourseGoals goals={loadedGoals} onDeleteGoal={deleteGoalHandler} />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}